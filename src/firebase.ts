import { initializeApp } from 'firebase/app'
import { getAuth, GoogleAuthProvider } from 'firebase/auth'
import { getFirestore, collection, addDoc, serverTimestamp } from 'firebase/firestore'

const firebaseConfig = {
  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,
  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,
  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,
  appId: import.meta.env.VITE_FIREBASE_APP_ID,
}

export const app = initializeApp(firebaseConfig)
export const auth = getAuth(app)
export const googleProvider = new GoogleAuthProvider()
export const db = getFirestore(app)

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É
export const subscribeToNewsletter = async (email: string) => {
  try {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ Firestore –¥–æ—Å—Ç—É–ø–Ω–∏–π
    if (!db) {
      throw new Error('Firestore –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π')
    }

    const docRef = await addDoc(collection(db, 'newsletter_subscribers'), {
      email: email.toLowerCase().trim(),
      createdAt: serverTimestamp(),
      isActive: true
    })
    return { success: true, id: docRef.id }
  } catch (error: any) {
    console.error('Error subscribing to newsletter:', error)
    
    // –¢–∏–º—á–∞—Å–æ–≤–∞ –∑–∞–≥–ª—É—à–∫–∞ - –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
    try {
      const subscribers = JSON.parse(localStorage.getItem('newsletter_subscribers') || '[]')
      const newSubscriber = {
        email: email.toLowerCase().trim(),
        createdAt: new Date().toISOString(),
        isActive: true,
        id: Date.now().toString()
      }
      subscribers.push(newSubscriber)
      localStorage.setItem('newsletter_subscribers', JSON.stringify(subscribers))
      
      console.log('üìß Email –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ:', newSubscriber)
      return { success: true, id: newSubscriber.id, local: true }
    } catch (localError) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è:', localError)
    }
    
    // –ë—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
    if (error.code === 'permission-denied') {
      return { success: false, error: '–ù–µ–º–∞—î –¥–æ–∑–≤–æ–ª—É –Ω–∞ –∑–∞–ø–∏—Å. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ Firestore.' }
    } else if (error.code === 'unavailable') {
      return { success: false, error: 'Firestore –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. Email –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ.' }
    } else if (error.message?.includes('Firestore –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π')) {
      return { success: false, error: 'Firestore –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π. Email –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ.' }
    }
    
    return { success: false, error: error.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞' }
  }
}


